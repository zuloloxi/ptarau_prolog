; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\A17\prolog\ptarau_prolog\src\termStore.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_BSS	SEGMENT
_theTerm DD	01H DUP (?)
_BSS	ENDS
PUBLIC	_pushTerm
; Function compile flags: /Ogtpy
; File c:\a17\prolog\ptarau_prolog\src\termstore.c
;	COMDAT _pushTerm
_TEXT	SEGMENT
_key$ = 8						; size = 4
_value$ = 12						; size = 4
_pushTerm PROC						; COMDAT

; 20   : void pushTerm(Term key, Term value){theTerm=value;}

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _value$[esp-4]
  00004	a3 00 00 00 00	 mov	 DWORD PTR _theTerm, eax
  00009	c3		 ret	 0
_pushTerm ENDP
_TEXT	ENDS
PUBLIC	_putTerm
; Function compile flags: /Ogtpy
;	COMDAT _putTerm
_TEXT	SEGMENT
_key$ = 8						; size = 4
_value$ = 12						; size = 4
_putTerm PROC						; COMDAT

; 21   : void putTerm(Term key, Term value){theTerm=value;}

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _value$[esp-4]
  00004	a3 00 00 00 00	 mov	 DWORD PTR _theTerm, eax
  00009	c3		 ret	 0
_putTerm ENDP
_TEXT	ENDS
PUBLIC	_newIterator
; Function compile flags: /Ogtpy
;	COMDAT _newIterator
_TEXT	SEGMENT
_key$ = 8						; size = 4
_newIterator PROC					; COMDAT

; 22   : ulong newIterator(Term key){return ZERO;}

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
_newIterator ENDP
_TEXT	ENDS
PUBLIC	_closeIterator
; Function compile flags: /Ogtpy
;	COMDAT _closeIterator
_TEXT	SEGMENT
_iterator$ = 8						; size = 4
_closeIterator PROC					; COMDAT

; 23   : void closeIterator(ulong iterator) {}

  00000	c3		 ret	 0
_closeIterator ENDP
_TEXT	ENDS
PUBLIC	_hasTerms
; Function compile flags: /Ogtpy
;	COMDAT _hasTerms
_TEXT	SEGMENT
_key$ = 8						; size = 4
_hasTerms PROC						; COMDAT

; 24   : BYTE hasTerms(Term key) {return NULL!=theTerm;}

  00000	33 c0		 xor	 eax, eax
  00002	39 05 00 00 00
	00		 cmp	 DWORD PTR _theTerm, eax
  00008	0f 95 c0	 setne	 al
  0000b	c3		 ret	 0
_hasTerms ENDP
_TEXT	ENDS
PUBLIC	_getNextTerm
; Function compile flags: /Ogtpy
;	COMDAT _getNextTerm
_TEXT	SEGMENT
_iterator$ = 8						; size = 4
_getNextTerm PROC					; COMDAT

; 25   : Term getNextTerm(ulong iterator) {return theTerm;}

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR _theTerm
  00005	c3		 ret	 0
_getNextTerm ENDP
_TEXT	ENDS
PUBLIC	_removeCurrentTerm
; Function compile flags: /Ogtpy
;	COMDAT _removeCurrentTerm
_TEXT	SEGMENT
_iterator$ = 8						; size = 4
_removeCurrentTerm PROC					; COMDAT

; 26   : void removeCurrentTerm(ulong iterator) {theTerm=NULL;}

  00000	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _theTerm, 0
  0000a	c3		 ret	 0
_removeCurrentTerm ENDP
_TEXT	ENDS
PUBLIC	_updateCurrentTerm
; Function compile flags: /Ogtpy
;	COMDAT _updateCurrentTerm
_TEXT	SEGMENT
_iterator$ = 8						; size = 4
_value$ = 12						; size = 4
_updateCurrentTerm PROC					; COMDAT

; 27   : void updateCurrentTerm(ulong iterator,Term value) {theTerm=value;}

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _value$[esp-4]
  00004	a3 00 00 00 00	 mov	 DWORD PTR _theTerm, eax
  00009	c3		 ret	 0
_updateCurrentTerm ENDP
_TEXT	ENDS
PUBLIC	_deleteAllTerms
; Function compile flags: /Ogtpy
;	COMDAT _deleteAllTerms
_TEXT	SEGMENT
_key$ = 8						; size = 4
_deleteAllTerms PROC					; COMDAT

; 28   : void deleteAllTerms(Term key) {theTerm=NULL;}

  00000	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _theTerm, 0
  0000a	c3		 ret	 0
_deleteAllTerms ENDP
_TEXT	ENDS
PUBLIC	_countTerms
; Function compile flags: /Ogtpy
;	COMDAT _countTerms
_TEXT	SEGMENT
_key$ = 8						; size = 4
_countTerms PROC					; COMDAT

; 29   : bp_long countTerms(Term key) {return 1;}

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
_countTerms ENDP
_TEXT	ENDS
PUBLIC	_newKeyIterator
; Function compile flags: /Ogtpy
;	COMDAT _newKeyIterator
_TEXT	SEGMENT
_newKeyIterator PROC					; COMDAT

; 30   : ulong newKeyIterator(){return ZERO;}

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
_newKeyIterator ENDP
_TEXT	ENDS
PUBLIC	_processTerm
; Function compile flags: /Ogtpy
;	COMDAT _processTerm
_TEXT	SEGMENT
_OpCode$ = 8						; size = 4
_arg$ = 12						; size = 4
_processTerm PROC					; COMDAT

; 31   : Term processTerm(bp_long OpCode,Term arg){return arg;}

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _arg$[esp-4]
  00004	c3		 ret	 0
_processTerm ENDP
_TEXT	ENDS
PUBLIC	_newTermString
EXTRN	_strdup:PROC
; Function compile flags: /Ogtpy
;	COMDAT _newTermString
_TEXT	SEGMENT
_s$ = 8							; size = 4
_newTermString PROC					; COMDAT

; 32   : char *newTermString(char *s) {return strdup(s);}

  00000	e9 00 00 00 00	 jmp	 _strdup
_newTermString ENDP
_TEXT	ENDS
PUBLIC	_freeTermString
EXTRN	_free:PROC
; Function compile flags: /Ogtpy
;	COMDAT _freeTermString
_TEXT	SEGMENT
_s$ = 8							; size = 4
_freeTermString PROC					; COMDAT

; 33   : void freeTermString(char *s) {free(s);}

  00000	e9 00 00 00 00	 jmp	 _free
_freeTermString ENDP
_TEXT	ENDS
END
